== AuthComponent ==

O AuthComponent serve para autenticar usuários (login) automaticamente. Após
configurá-lo dentro de AppController, ele toma conta de todo o processo de
autenticação.

=== Guia de Configuração ===

Você precisa configurar alguns itens básicos, como qual é a página que o usuário
será redirecionado após login, quais página são liberadas para usuários não
logados, entre outros.

Você deve chamar o AuthComponent nas propriedades do AppController.php (ou
controller que você deseja usar).

A seguir, estão os comandos básicos de configuração. Copie o código abaixo e
cole dentro do método beforeFilter() do arquivo app/app_controller.php (se o
método não existe, crie-o).

eg.

// app/app_controller.php

class AppController extends Controller
{

    var $components = array("Auth");

    /**
     * beforeFilter() é chamado automaticamente sempre antes de qualquer action
     */
    function beforeFilter(){

        /**
         * Auth::allow(array) indica quais os controllers e actions usuários não
         * logados podem acessar.
         *
         * Há três formatos possíveis de indicar estas permissões:
         *      - Libera um Controller inteiro -> Controller é um valor na array:
         *      ex.: array(
         *               "controllerA", "controllerB"
         *           );
         *
         *      - Libera Actions específicos -> Controller é um índice com
         *        subarray de Actions.
         *      ex.: array(
         *               "controllerA" => array(
         *                   "actionA", "actionB"
         *               ),
         *               "controllerB"
         *           );
         *
         *      - Libera todos os Controllers -> Um valor de array com asterísco (*)
         *      ex.: array("*");
         *
         * Auth::deny() tem o efeito contrário a allow(), indicando quais os
         * controllers e actions são proibidos. Dica: use allow() sempre.
         *
         * Obs.: Auth::allow() sobrescreve Auth::deny().
         */
            $this->auth->allow(array(
                "site" => array(
                    "index"
                ),
            ));

        // Use a linha abaixo somente se você deseja deslogar o usuário após
        // x minutos de inatividade. Não use este comando para permitir inatividade
        // $this->auth->expireTime("10"); // tempo em minutos

        // Após login com sucesso, para onde o usuário deve ser redirecionado
        $this->auth->redirectTo( array("controller" => "site", "action" => "index") );

        // Redirecionamento automático para última página acessada (opcional)
        $this->auth->autoRedirect(true);

        // Qual é a página de login
        $this->auth->loginPage( array("controller" => "site", "action" => "login") );

        // Mensagem de erro: dados incorretos
        $this->auth->errorMessage("Seus dados estão incorretos!");

        // Mensagem de erro: quando usuário tenta acessar action proibida
        $this->auth->deniedMessage("Você não tem permissão de acesso!");

        // Qual é o model que contém username e password dos usuários para login
        $this->auth->model("Usuario");
    }

}

=== Regras de liberação ===

As regras de liberação a usuários não logados são como as demonstradas a seguir.

Actions: a,b,c,d;

Regras:

a) allow(a,c)           -> libera a,c e trava b,d
b) allow(a,c) deny(a,c) -> libera a,c (se allow está configurado, ignora deny)
c) deny(a)              -> bloqueia somente a e libera o resto

=== Formulários de Login ===

Para criar um formulário de login, basta criar um formulário usando FormHelper
como qualquer outro usando. O AuthComponent vai tentar autenticar com os
dados enviados. Se você usou os campos 'email' e 'senha', ele vai verificar se
um usuário existe com estas informações. Se você usar três, quatro ou quantos
campos você quiser, o Auth sempre vai autenticar usando TODOS os dados que você
enviar

Exemplo de formulário de login:
    <?php
    echo $form->create("Usuario", array(
            "controller" => "site",
            "action" => "login",
        ));

    echo $form->statusMessage(); // Mostra mensagens de erro

    echo $form->input("email");
    echo $form->input("senha");
    echo $form->end("Enviar");
    ?>

No formulário acima, não importa o local que você redirecione o formulário,
desde que seja um controller e um action existentes. O Auth sempre vai
levar o usuário para o que estiver configurado em $this->auth->redirectTo em
caso de sucesso ou para a tela de login caso não ocorra a autenticação dos
dados.

Para Logout, basta redirecionar para o action chamado 'logout' de qualquer
controller. O Auth considera que um action 'logout' é para deslogar o usuário
logado.

=== Logout manual no controller ===

O Auth faz logout automaticamente para você, basta acessar um action chamado
'logout'. Entretanto, se você quer fazer logout manualmente, no seu
controller use o comando:

$this->auth->logout();
